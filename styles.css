/* style.css
 *
 * Modern, simple design for the Wheaton Network Visualization interface.
 * Works seamlessly with index.html, filter-handler.js, vis-core.js, and vis-update.js.
 * 
 * Sections:
 *  1) Global / Body
 *  2) Layout (main-layout, sidebars, details row, network container)
 *  3) Sidebar Elements (stats, filters, legend items)
 *  4) Network Visualization (SVG container, zoom controls, tooltip)
 *  5) Node/Edge Details (side panel, item labels)
 *  6) Loading Overlay
 *  7) Optional BFS highlight classes (if desired)
 */

/* ---------------------------------------------------
 * 1) GLOBAL / BODY
 * ---------------------------------------------------
 */
 body {
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
      "Helvetica Neue", Arial, sans-serif;
    background-color: #ffffff;
    color: #333;
  }
  
  a,
  button {
    cursor: pointer;
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-weight: 600;
    margin-bottom: 0.75rem;
  }
  
  .small {
    font-size: 0.875rem;
  }
  
  /* ---------------------------------------------------
   * 2) LAYOUT
   * ---------------------------------------------------
   */
  
  /* The main layout: a left sidebar + a flex column for main content */
  .main-layout {
    display: flex;
    flex-direction: row;
    height: 100vh; /* fill vertical space */
  }
  
  /* The left sidebar: houses filters and stats */
  .left-sidebar {
    width: 260px;
    background-color: #f9f9f9;
    border-right: 1px solid #ddd;
    padding: 1rem;
    overflow-y: auto;
  }
  
  /* Stats and filters are stacked vertically */
  .sidebar-header {
    margin-bottom: 1rem;
  }
  
  .sidebar-stats small {
    display: block;
    color: #555;
  }
  
  /* Section blocks within the sidebar */
  .sidebar-section {
    margin-bottom: 1.25rem;
  }
  
  /* Main content area: includes details row + D3 container */
  .main-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  /* Row that holds node/edge details or info panel at the top */
  .details-row {
    min-height: 60px;
    border-bottom: 1px solid #ddd;
    padding: 0.5rem 1rem;
    background-color: #fff;
    display: flex;
    gap: 1rem;
  }
  
  /* The actual network container: the D3 area + zoom controls */
  .network-container {
    position: relative;
    flex: 1; /* fill remaining vertical space */
    border: 1px solid #ddd;
    margin: 0 1rem 1rem 0;
    overflow: hidden;
  }
  
  /* ---------------------------------------------------
   * 3) SIDEBAR ELEMENTS
   * ---------------------------------------------------
   */
  /* Generic section titles in the sidebar */
  .sidebar-section h6 {
    margin-bottom: 0.5rem;
    font-size: 0.95rem;
    font-weight: 600;
  }
  
  /* A simple grid layout for legend items or filters */
  .legend-grid,
  .edge-types-grid {
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
  }
  
  /* Node type items, edge type items, roles, categories, etc. */
  .legend-item,
  .legend-item-filter,
  .legend-item-gender,
  .legend-item-role,
  .legend-item-category {
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: opacity 0.2s ease;
    padding: 2px 0;
  }
  
  .legend-item.inactive,
  .legend-item-filter.inactive,
  .legend-item-gender.inactive,
  .legend-item-role.inactive,
  .legend-item-category.inactive {
    opacity: 0.4;
  }
  
  /* Colored circle (node type, gender, or roles) */
  .legend-circle {
    display: inline-block;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 6px;
  }
  
  /* For edges (marriage, commodity, service, etc.) lines or squares */
  .legend-line {
    display: inline-block;
    width: 24px;
    height: 4px;
    margin-right: 6px;
    border-radius: 2px;
  }
  
  .legend-square {
    display: inline-block;
    width: 12px;
    height: 12px;
    margin-right: 6px;
    background-color: #ccc;
    border-radius: 2px;
  }
  
  button[data-filter="showAll"] {
    width: 100%;
    font-size: 0.85rem;
  }
  
  /* ---------------------------------------------------
   * 4) NETWORK VISUALIZATION (SVG, ZOOM CONTROLS, TOOLTIP)
   * ---------------------------------------------------
   */
  
  /* The zoom buttons float at top-right corner of .network-container */
  .network-controls {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .network-controls .btn {
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    border: 1px solid #ccc;
  }
  
  /* The main SVG for D3 is full-size via flex in .network-container */
  #networkViz {
    width: 100%;
    height: 100%;
    background-color: #fff;
    /* You can add a background if you like a grid or subtle pattern. */
  }
  
  /* The tooltip is absolutely positioned, hidden by default */
  .tooltip {
    position: absolute;
    pointer-events: none; /* let mouse pass through */
    padding: 6px 10px;
    background: rgba(30, 30, 30, 0.9);
    color: #fff;
    border-radius: 4px;
    font-size: 0.85rem;
    visibility: hidden;
    z-index: 1000;
    min-width: 120px;
  }
  
  /* ---------------------------------------------------
   * 5) NODE/EDGE DETAILS (SIDE PANEL / INFO)
   * ---------------------------------------------------
   */
  
  #nodeDetails,
  #edgeDetails {
    background-color: #fafafa;
    border: 1px solid #eee;
    padding: 0.75rem;
    min-height: 50px;
    overflow-y: auto;
    flex: 1;
  }
  
  #nodeDetails h6,
  #edgeDetails h6 {
    margin-bottom: 0.5rem;
    font-size: 1rem;
    font-weight: 600;
  }
  
  .details-content .detail-item {
    margin-bottom: 0.25rem;
    font-size: 0.85rem;
    line-height: 1.2;
  }
  
  .detail-item .detail-label {
    font-weight: 500;
    margin-right: 4px;
  }
  
  .detail-item .detail-value {
    color: #444;
  }
  
  .details-content pre {
    background: #f0f0f0;
    padding: 4px;
    border-radius: 4px;
    font-size: 0.75rem;
    margin-bottom: 0.25rem;
    white-space: pre-wrap;
    word-wrap: break-word;
  }
  
  /* ---------------------------------------------------
   * 6) LOADING OVERLAY
   * ---------------------------------------------------
   */
  .loading-overlay {
    position: fixed;
    inset: 0; /* top, right, bottom, left = 0 */
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(255,255,255,0.8);
    z-index: 9999;
    transition: opacity 0.3s ease;
  }
  
  /* 
   * 7) OPTIONAL BFS HIGHLIGHT CLASSES 
   * (If you want class-based BFS instead of inline 'attr("opacity")')
   *
   * .bfs-dim { opacity: 0.15; }
   * .bfs-highlight { opacity: 0.8; }
   * etc.
   */
  
  /* 
     NOTE: The BFS highlight in vis-update.js sets 'attr("opacity")' directly, 
     but you can use these classes if you prefer a CSS approach, e.g.:
  
     .node.bfs-dim { opacity: 0.15; }
     .link.bfs-highlight { opacity: 0.8; }
  
     Then in your BFS code:
     d3.selectAll('.node').classed('bfs-dim', true).classed('bfs-highlight', false)
     ...
   */
  